#include "boost.h"

LBL "STACK"

CF 25                        ; catch errors
CLSTBUF                      ; erase stack buffer

42     PUSH X
STACKSZ  1  X≠Y?  SF 99

"FOO"  PUSHA
STACKSZ  3  X≠Y?  SF 99
ASTO 00                       ; save FOO in register 00

CF 00   SF 01  CF 28  PUSHFLG
SF 00   CF 01  SF 28          ; toggle pushed flags

STACKSZ  4  X≠Y?  SF 99

3 BUFSZ  5 X≠Y?  SF 99

CLA  PUSHA                    ; push empty string

STACKSZ  5  X≠Y?  SF 99

3 BUFSZ  5 X≠Y?  SF 99        ; check that clear alpha did not grow buffer

ASTO X
= 00 X                        ; "FOO" in register 00 is not the empty string
SF 99

"GARBAGE TEXT"
POPA                          ; pop empty string
ALENG  X≠0?  SF 99            ; was it empty?

POPFLG                        ; restore and test flags
FS? 00  SF 99
FC? 01  SF 99
FS? 28  SF 99

"LONG STRING"

POPA
ALENG 3  X≠Y?  SF 99          ; now we popped back a string of length 3

ASTO X
≠ 00 X                        ; now "FOO" should be "FOO"
SF 99

POP X 42
X≠Y?  SF 99

3 BUFSZ  2 X≠Y?  SF 99        ; buffer remains, 2 registers
STACKSZ  X≠0?  SF 99          ; but stack is actually empty

;;; Test limit of 13 PUSHA
1.013

LBL 05
PUSHA
STO IND X                     ; also store in reg 1-13
ISG X
GTO 05

SF 25                         ; now we should have an error if we try again
PUSHA
FS?C 25
SF 99

3 BUFSZ  15 X≠Y?  SF 99       ; buffer should be 15 registers now
STACKSZ  26 X≠Y?  SF 99       ; stack size includes the 13 alpha pushes

;;; Test push/pop data register range
1.013  PUSHBYX                ; push 13 registers of loop values
CLRG                          ; clear data registers
1.013  POPBYX                 ; restore them

STO 00                        ; use 00 for loop counter
LBL 06
≠ IND 00 00      SF 99        ; test the value
POPA
ISG 00
GTO 06

STACKSZ  X≠0?  SF 99          ; stack is now empty

;;; Test recursion
"RECURSE"  AVIEW

1  STO 00
13   XEQ 12
13 FACT   RCL 00    X≠Y?  SF 99

;;; Test stack fill
"FILL ST"  AVIEW
4  STO 00
1  STO 01
2  STO 02
XEQ 08                        ; fill stack and push
+ POPFLXL                     ; X=7 L=4
≠ 00 L    SF 99
+ + +
13  X≠Y?  SF 99

XEQ 08
20 POPDRXL
≠ 00 L    SF 99
≠ 02 Y    SF 99
≠ 01 Z    SF 99
≠ 01 T    SF 99
+ +
23 X≠Y?   SF 99

STACKSZ  X≠0?  SF 99          ; stack is now empty

RTN                           ; done


LBL 12                        ; stupid recursion loop
PUSHST
RTNS
6   X=Y?   GTO 09
POPST
X=0?       GTO 10
ST* 00
1  -
XEQ 12
LBL 10
RTN?
RTN
TOPRTN?
POPRST
RTN

LBL 09                       ; extend the stack
POPST
PUSHRST
GTO 12

LBL 08
5 +
1
ENTER
2
ENTER
3
ENTER
4
PUSHST
END
